{
  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "location": {
      "type": "string",
      "defaultValue": "[resourceGroup().location]"
    },
    "primaryRegionResourceGroupName": {
      "type": "string"
    },
    "managedIdentityName": {
      "type": "string"
    },
    "cosmosName": {
      "type": "string"
    },
    "storageName": {
      "type": "string"
    },
    "keyVaultName": {
      "type": "string"
    },
    "sqlPassword": {
      "type": "string"
    },
    "sqlServerName": {
      "type": "string"
    },
    "mySqlServerName": {
      "type": "string"
    },
    "postgreSqlServerName": {
      "type": "string"
    },
    "services": {
      "type": "array"
    }
  },
  "variables": {
    "managedIdentityResourceId": "[resourceID(parameters('primaryRegionResourceGroupName'), 'Microsoft.ManagedIdentity/userAssignedIdentities/', parameters('managedIdentityName'))]"
  },
  "resources": [
    {
      "condition": "[contains(parameters('services'), 'Cosmos')]",
      "type": "Microsoft.KeyVault/vaults/secrets",
      "apiVersion": "2021-11-01-preview",
      "name": "[format('{0}/{1}', parameters('keyVaultName'), 'CosmosConnection')]",
      "properties": {
        "value": "[if(contains(parameters('services'), 'Cosmos'), listConnectionStrings(resourceId(parameters('primaryRegionResourceGroupName'),'Microsoft.DocumentDB/databaseAccounts', parameters('cosmosName')), '2019-12-12').connectionStrings[0].connectionString, 'blank')]"
      }
    },
    {
      "condition": "[contains(parameters('services'), 'SQL')]",
      "type": "Microsoft.KeyVault/vaults/secrets",
      "apiVersion": "2021-11-01-preview",
      "name": "[format('{0}/{1}', parameters('keyVaultName'), 'SQLConnection')]",
      "properties": {
        "value": "[if(contains(parameters('services'), 'SQL'), format('Data Source=tcp:{0},1433;Initial Catalog={1};User Id={2}@{3};Password={4};', reference(resourceId(parameters('primaryRegionResourceGroupName'),'Microsoft.Sql/servers', parameters('sqlserverName')), '2022-05-01-preview').fullyQualifiedDomainName, 'master', 'FrostiAdmin', reference(resourceId(parameters('primaryRegionResourceGroupName'),'Microsoft.Sql/servers', parameters('sqlserverName')),'2022-05-01-preview').fullyQualifiedDomainName, parameters('sqlPassword')), 'blank')]"
      }
    },
    {
      "condition": "[contains(parameters('services'), 'Storage')]",
      "type": "Microsoft.KeyVault/vaults/secrets",
      "apiVersion": "2021-11-01-preview",
      "name": "[format('{0}/{1}', parameters('keyVaultName'), 'StorageConnection')]",
      "properties": {
        "value": "[if(contains(parameters('services'), 'Storage'), concat('DefaultEndpointsProtocol=https;AccountName=', parameters('storageName'), ';AccountKey=', listKeys(resourceId(parameters('primaryRegionResourceGroupName'),'Microsoft.Storage/storageAccounts', parameters('storageName')), '2019-04-01').keys[0].value,';EndpointSuffix=core.windows.net'), 'blank')]"
      }
    }
  ]
}