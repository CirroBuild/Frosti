{
  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "projectName": {
      "type": "string"
    },
    "location": {
      "type": "string",
      "defaultValue": "[resourceGroup().location]"
    },
    "services": {
      "type": "array"
    }
  },
  "variables": {
    "webPlanName": "[format('Plan-{0}', parameters('projectName'))]",
    "functionPlanName": "[format('FunctionPlan-{0}', parameters('projectName'))]",
    "functionAppName": "[format('{0}FunctionApp', parameters('projectName'))]",
    "managedIdentityName": "[format('{0}-managedidentity', parameters('projectName'))]",
    "appInsightsName": "[format('{0}-appinsights', parameters('projectName'))]",
    "cosmosName": "[format('{0}cosmos', parameters('projectName'))]",
    "storageName": "[format('{0}storage', parameters('projectName'))]",
    "serviceBusName": "[format('{0}-servicebus', parameters('projectName'))]",
    "eventHubName": "[format('{0}-eventhub', parameters('projectName'))]",
    "redisCacheName": "[format('{0}-redis', parameters('projectName'))]",
    "sqlServerName": "[format('{0}-sqlserver', parameters('projectName'))]",
    "mySqlServerName": "[format('{0}-mysqlserver', parameters('projectName'))]",
    "postgreSqlServerName": "[format('{0}-postgresqlserver', parameters('projectName'))]"
  },
  "resources": [
    {
      "type": "Microsoft.ManagedIdentity/userAssignedIdentities",
      "apiVersion": "2022-01-31-preview",
      "name": "[variables('managedIdentityName')]",
      "location": "[parameters('location')]"
    },
    {
      "condition": "[contains(parameters('services'), 'ApplicationInsights')]",
      "type": "Microsoft.Insights/components",
      "apiVersion": "2020-02-02",
      "name": "[variables('appInsightsName')]",
      "location": "[parameters('location')]",
      "kind": "web",
      "properties": {
        "Application_Type": "web",
        "Request_Source": "IbizaWebAppExtensionCreate"
      }
    },
    {
      "condition": "[contains(parameters('services'), 'WebApp')]",
      "type": "Microsoft.Web/serverfarms",
      "apiVersion": "2021-02-01",
      "name": "[variables('webPlanName')]",
      "location": "[parameters('location')]",
      "sku": {
        "name": "F1"
      },
      "kind": "linux",
      "properties": {
        "reserved": true
      }
    },
    {
      "condition": "[contains(parameters('services'), 'FunctionApp')]",
      "type": "Microsoft.Web/serverfarms",
      "apiVersion": "2021-02-01",
      "name": "[variables('functionPlanName')]",
      "location": "[parameters('location')]",
      "sku": {
        "name": "Y1"
      }
    },
    {
      "condition": "[contains(parameters('services'), 'FunctionApp')]",
      "type": "Microsoft.Web/sites",
      "apiVersion": "2022-03-01",
      "name": "[variables('functionAppName')]",
      "location": "[parameters('location')]",
      "kind": "functionapp",
      "properties": {
        "httpsOnly": true,
        "serverFarmId": "[resourceId('Microsoft.Web/serverfarms', variables('functionPlanName'))]",
        "siteConfig": {
          "minTlsVersion": "1.2"
        }
      },
      "dependsOn": [
        "[resourceId('Microsoft.Web/serverfarms/',variables('functionPlanName'))]"
      ],
      "identity": {
        "type": "userAssigned",
        "userAssignedIdentities": {
            "[resourceID('Microsoft.ManagedIdentity/userAssignedIdentities/', variables('managedIdentityName'))]": {}
        }
      }
    },
    {
      "condition": "[contains(parameters('services'), 'Cosmos')]",
      "name": "[take(toLower(concat(variables('cosmosName'), uniqueString(resourceGroup().id))),44)]",
      "type": "Microsoft.DocumentDB/databaseAccounts",
      "apiVersion": "2022-08-15",
      "location": "[parameters('location')]",
      "kind": "GlobalDocumentDB",
      "properties": {
        "consistencyPolicy": {
          "defaultConsistencyLevel": "Eventual",
          "maxStalenessPrefix": 1,
          "maxIntervalInSeconds": 5
        },
        "locations": [
          {
            "locationName": "[parameters('location')]",
            "failoverPriority": 0
          }
        ],
        "databaseAccountOfferType": "Standard",
        "enableAutomaticFailover": false
      },
      "identity": {
        "type": "userAssigned",
        "userAssignedIdentities": {
            "[resourceID('Microsoft.ManagedIdentity/userAssignedIdentities/',variables('managedIdentityName'))]": {}
        }
      },
      "dependsOn": [
        "[resourceId('Microsoft.ManagedIdentity/userAssignedIdentities/',variables('managedIdentityName'))]"
      ]
    },
    {
      "condition": "[contains(parameters('services'), 'Storage')]",
      "type": "Microsoft.Storage/storageAccounts",
      "apiVersion": "2021-09-01",
      "name": "[take(toLower(concat(variables('storageName'), uniqueString(resourceGroup().id))),24)]",
      "location": "[parameters('location')]",
      "sku": {
        "name": "Standard_LRS",
        "tier": "Standard"
      },
      "kind": "StorageV2",
      "identity": {
        "type": "userAssigned",
        "userAssignedIdentities": {
            "[resourceID('Microsoft.ManagedIdentity/userAssignedIdentities/', variables('managedIdentityName'))]": {}
        }
      },
      "properties": {
        "accessTier": "Hot"
      }
    },
    {
      "condition": "[contains(parameters('services'), 'ServiceBus')]",
      "type": "Microsoft.ServiceBus/Namespaces",
      "apiVersion": "2021-11-01",
      "name": "[variables('serviceBusName')]",
      "location": "[resourceGroup().location]",
      "sku": {
        "name": "Basic"
      },
      "identity": {
        "type": "userAssigned",
        "userAssignedIdentities": {
            "[resourceID('Microsoft.ManagedIdentity/userAssignedIdentities/',variables('managedIdentityName'))]": {}
        }
      }
    },
    {
      "condition": "[contains(parameters('services'), 'EventHubs')]",
      "type": "Microsoft.EventHub/namespaces",
      "apiVersion": "2021-11-01",
      "name": "[variables('eventHubName')]",
      "location": "[parameters('location')]",
      "sku": {
        "name": "Basic",
        "tier": "Basic"
      },
      "properties": {
        "isAutoInflateEnabled": false,
        "maximumThroughputUnits": 0
      },
      "identity": {
        "type": "userAssigned",
        "userAssignedIdentities": {
            "[resourceID('Microsoft.ManagedIdentity/userAssignedIdentities/',variables('managedIdentityName'))]": {}
        }
      }
    },
    {
      "condition": "[contains(parameters('services'), 'Redis')]",
      "type": "Microsoft.Cache/redis",
      "apiVersion": "2022-06-01",
      "name": "[variables('redisCacheName')]",
      "location": "[parameters('location')]",
      "properties": {
        "enableNonSslPort": true,
        "minimumTlsVersion": "1.2",
        "sku": {
          "capacity": "0",
          "family": "C",
          "name": "Basic"
        }
      },
      "identity": {
        "type": "userAssigned",
        "userAssignedIdentities": {
            "[resourceID('Microsoft.ManagedIdentity/userAssignedIdentities/',variables('managedIdentityName'))]": {}
        }
      }
    },
    {
      "condition": "[contains(parameters('services'), 'SQL')]",
      "type": "Microsoft.Sql/servers",
      "apiVersion": "2022-05-01-preview",
      "name": "[variables('sqlServerName')]",
      "location": "[parameters('location')]",
      "identity": {
        "type": "userAssigned",
        "userAssignedIdentities": {
            "[resourceID('Microsoft.ManagedIdentity/userAssignedIdentities/',variables('managedIdentityName'))]": {}
        }
      },
      "properties": {
        "administratorLogin": "CirroAdmin",
        "administratorLoginPassword": "!!CirroBuild1010!!",
        "primaryUserAssignedIdentityId": "[resourceID('Microsoft.ManagedIdentity/userAssignedIdentities/',variables('managedIdentityName'))]",
        "minimalTlsVersion": "1.2"
      }
    },
    {
      "condition": "[contains(parameters('services'), 'MySql')]",
      "type": "Microsoft.DBforMySQL/servers",
      "apiVersion": "2017-12-01",
      "name": "[variables('mySqlServerName')]",
      "location": "[parameters('location')]",
      "sku": {
        "name": "B_Gen5_1"
      },
      "properties": {
        "createMode": "Default",
        "version": "5.7",
        "administratorLogin": "CirroAdmin",
        "administratorLoginPassword": "!!CirroBuild1010!!"
      }
    },
    {
      "condition": "[contains(parameters('services'), 'PostgreSQL')]",
      "type": "Microsoft.DBforPostgreSQL/servers",
      "apiVersion": "2017-12-01",
      "name": "[toLower(concat(variables('postgreSqlServerName'), uniqueString(resourceGroup().id)))]",
      "location": "[parameters('location')]",
      "sku": {
        "name": "B_Gen5_1"
      },
      "properties": {
        "createMode": "Default",
        "version": "10",
        "administratorLogin": "CirroAdmin",
        "administratorLoginPassword": "!!CirroBuild1010!!"
      }
    }
  ]
}